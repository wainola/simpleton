{"version":3,"file":"static/webpack/static/development/pages/index.js.3a81165280e789c6cb62.hot-update.js","sources":["webpack:///./Services/validators.js","webpack:///./node_modules/@babel/runtime-corejs2/core-js/object/entries.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/fn/object/entries.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/_object-to-array.js","webpack:///./node_modules/@babel/runtime-corejs2/node_modules/core-js/library/modules/es7.object.entries.js","webpack:///./pages/components/Contact.jsx"],"sourcesContent":["const validations = fields => {\n  const data = Object.entries(fields).filter(e => e[0] !== 'email');\n\n  const { email } = fields;\n\n  const validEmail = emailValidation(email);\n\n  const validData = validateOtherData(data);\n\n  return [...validData, validEmail];\n};\n\nconst emailValidation = email => {\n  const emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  return { key: 'email', isValid: emailRegex.test(email) };\n};\n\nconst validateOtherData = data =>\n  data.map(item => {\n    if (item[0] === 'nombre' || item[0] === 'apellido') {\n      return { key: item[0], isValid: item[1].length > 3 };\n    }\n\n    if (item[0] === 'telefono') {\n      return { key: item[0], isValid: item[1].length >= 9 };\n    }\n    return { key: item[0], isValid: item[1].length > 10 };\n  });\n\nexport default validations;\n","module.exports = require(\"core-js/library/fn/object/entries\");","require('../../modules/es7.object.entries');\nmodule.exports = require('../../modules/_core').Object.entries;\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Grid, FormControl, TextField, Button } from '@material-ui/core';\nimport validations from '../../Services/validators';\n\nimport LoadComplete from './LoadComplete';\n\nconst styles = theme => ({\n  paper: {\n    textAlign: 'center',\n    height: '100%'\n  },\n  formFields: {\n    margin: '10px',\n    width: '75%'\n  },\n  formContainer: {\n    display: 'flex',\n    'flex-direction': 'column',\n    'justify-content': 'center',\n    'align-items': 'center'\n  },\n  inlineFields: {\n    display: 'flex',\n    'flex-direction': 'row',\n    'align-items': 'flex-end'\n  }\n});\n\nfunction Contact(props) {\n  const [formChecked, setFormChecked] = React.useState({\n    nombre: false,\n    apellido: false,\n    email: false,\n    telefono: false,\n    razon: false,\n    direccion: false\n  });\n  const [formValues, setFormValues] = React.useState({\n    nombre: '',\n    apellido: '',\n    email: '',\n    telefono: '',\n    razon: '',\n    direccion: ''\n  });\n  const [allChecked, setAllChecked] = React.useState(false);\n  const [isComplete, setComplete] = React.useState(false);\n\n  function handleBlur(evt) {\n    if (evt.target.value !== '') {\n      setFormChecked({\n        ...formChecked,\n        [evt.target.name]: !formChecked[evt.target.name]\n      });\n    }\n  }\n\n  function handleFocus(evt) {\n    console.log(':::', evt.target.value);\n    if (evt.target.value !== '') {\n      setFormChecked({\n        ...formChecked,\n        [evt.target.name]: !formChecked[evt.target.name]\n      });\n    }\n  }\n\n  function handleChange(evt) {\n    evt.preventDefault();\n    if (evt.target.name === 'direccion' && formChecked[evt.target.name]) {\n      setAllChecked(!allChecked);\n    }\n    setFormValues({\n      ...formValues,\n      [evt.target.name]: evt.target.value\n    });\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    console.log('formValues', formValues);\n    console.log('validations', validations(formValues));\n  }\n\n  const { classes } = props;\n\n  // console.log('props', props);\n  console.log('props', formChecked.direccion, formValues.direccion);\n\n  return (\n    <div>\n      <Grid container>\n        <Grid item xs={12} sm={12} md={12} lg={12} className={classes.formContainer}>\n          <form onSubmit={handleSubmit}>\n            <FormControl className={classes.formFields}>\n              <div className={classes.inlineFields}>\n                <LoadComplete isComplete={formChecked.nombre} name=\"nombre\" />\n                <TextField\n                  id=\"input-with-icon-textfield\"\n                  label=\"Nombre\"\n                  onBlur={!formChecked.nombre ? handleBlur : () => {}}\n                  onFocus={handleFocus}\n                  name=\"nombre\"\n                  onChange={handleChange}\n                />\n              </div>\n            </FormControl>\n            <FormControl className={classes.formFields}>\n              <div className={classes.inlineFields}>\n                <LoadComplete isComplete={formChecked.apellido} name=\"apellido\" />\n                <TextField\n                  id=\"input-with-icon-textfield\"\n                  label=\"Apellido\"\n                  name=\"apellido\"\n                  onBlur={!formChecked.apellido ? handleBlur : () => {}}\n                  onFocus={handleFocus}\n                  onChange={handleChange}\n                />\n              </div>\n            </FormControl>\n            <FormControl className={classes.formFields}>\n              <div className={classes.inlineFields}>\n                <LoadComplete isComplete={formChecked.email} name=\"email\" />\n                <TextField\n                  id=\"input-with-icon-textfield\"\n                  label=\"Email\"\n                  name=\"email\"\n                  onBlur={!formChecked.email ? handleBlur : () => {}}\n                  onFocus={handleFocus}\n                  onChange={handleChange}\n                />\n              </div>\n            </FormControl>\n            <FormControl className={classes.formFields}>\n              <div className={classes.inlineFields}>\n                <LoadComplete isComplete={formChecked.telefono} name=\"telefono\" />\n                <TextField\n                  id=\"input-with-icon-textfield\"\n                  label=\"Teléfono\"\n                  name=\"telefono\"\n                  onBlur={!formChecked.telefono ? handleBlur : () => {}}\n                  onFocus={handleFocus}\n                  onChange={handleChange}\n                />\n              </div>\n            </FormControl>\n            <FormControl className={classes.formFields}>\n              <div className={classes.inlineFields}>\n                <LoadComplete isComplete={formChecked.razon} name=\"razon\" />\n                <TextField\n                  id=\"input-with-icon-textfield\"\n                  label=\"Motivo de consulta\"\n                  name=\"razon\"\n                  onBlur={!formChecked.razon ? handleBlur : () => {}}\n                  onFocus={handleFocus}\n                  onChange={handleChange}\n                />\n              </div>\n            </FormControl>\n            <FormControl className={classes.formFields}>\n              <div className={classes.inlineFields}>\n                <LoadComplete isComplete={formChecked.direccion} name=\"direccion\" />\n                <TextField\n                  id=\"input-with-icon-textfield\"\n                  label=\"Dirección\"\n                  name=\"direccion\"\n                  onBlur={!formChecked.direccion ? handleBlur : () => {}}\n                  onFocus={handleFocus}\n                  onChange={handleChange}\n                />\n              </div>\n            </FormControl>\n            <FormControl className={classes.formFields}>\n              <Button color=\"primary\" type=\"submit\">\n                Guardar\n              </Button>\n            </FormControl>\n          </form>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nexport default withStyles(styles)(Contact);\n"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAKA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAVA;AACA;AAWA;;;;;;;;;;;AC9BA;;;;;;;;;;;ACAA;AACA;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AAHA;AAfA;AAAA;AACA;AAqBA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAAA;AAAA;AACA;AADA;AAUA;AACA;AACA;AACA;AACA;AACA;AANA;AATA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAmBA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvDA;AACA;AA0DA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;;;;A","sourceRoot":""}